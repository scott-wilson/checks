name: Python Test Suite

on:
  push:
    branches: ["main"]
    paths:
      - .github/workflows/*_python.yml
      - bindings/python/**
      - src/**
      - Cargo.lock
      - Cargo.toml
      - deny.toml
      - .gitmodules
  pull_request:
    paths:
      - .github/workflows/*_python.yml
      - bindings/python/**
      - src/**
      - Cargo.lock
      - Cargo.toml
      - deny.toml
      - .gitmodules

permissions:
  contents: read

jobs:
  test:
    name: Python test
    defaults:
      run:
        working-directory: bindings/python
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3" # Latest version
        exclude:
          # Skip Python 3.7 on macos-latest due to no support.
          - os: macos-latest
            python-version: "3.7"
    runs-on: ${{matrix.os}}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0d381219ddf674d61a7572ddd19d7941e271515c # v2.9.0
        with:
          egress-policy: audit

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          submodules: recursive
      - uses: dtolnay/rust-toolchain@d0592fe69e35bc8f12e3dbaf9ad2694d976cb8e3 # stable
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
      - name: Run Cargo Clippy
        run: cargo clippy
      - name: Run Cargo Fmt
        run: cargo fmt --check
      - name: Run Cargo Deny
        uses: EmbarkStudios/cargo-deny-action@8371184bd11e21dcf8ac82ebf8c9c9f74ebf7268 # v2.0.1
        if: ${{ matrix.os == 'ubuntu-latest' }}
      - name: Setup Python ${{matrix.python-version}}
        id: setup-python
        uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          python-version: ${{matrix.python-version}}
          cache: 'pip'
      - name: Install dependencies
        run: python -m pip install .[test]
      - name: Lint with Ruff
        run: |
          python -m ruff check --output-format=github .
      - name: Lint with Ruff
        run: |
          python -m ruff format --check .
      - name: Build Rust
        uses: PyO3/maturin-action@2c5c1560848aaa364c3545136054932db5fa27b7 # v1.44.0
        with:
          sccache: 'true'
          manylinux: auto
          working-directory: bindings/python
      - name: Run tests
        run: |
          python -m pip install openchecks --find-links target/wheels
          python -m pytest --hypothesis-profile default -n=auto tests/
